{% if item.protocol == 'v4' %}{% set proto = '4' %}{% else %}{% set proto = '6' %}{% endif %}
protocol bgp peer_{{ item.name }}_{{ item.protocol }} {
    description "{{ item.description }}";

    graceful restart on;
    graceful restart time 0;
#    bfd graceful;
    startup hold time 240;

#    debug all;

    {% if item.multihop is defined %}
    multihop {{ item.multihop }};
    {% endif %}
    {% if item.set_multihop is defined %}
    multihop;
    {% endif %}

    local {{ item.local.ip }} as {{ item.local.asn }};
    neighbor {{ item.neighbor.ip }} as {{ item.neighbor.asn }};

    default bgp_local_pref {{ item.bgp_local_pref | default(300) }};

    ip{{ item.protocol }} {
        import keep filtered;
        import table;

        import filter {
            reject_bogon_route();
            reject_too_long_aspath();
            reject_out_of_bound_route();
            reject_invalid_rpki(CHECK_TYPE_SOFT);
            clean_own_communities();
            add_source_community(SRC_PEER, {{ item.neighbor.asn }});
            honour_graceful_shutdown();
            accept;
        };
        export filter {
            reject_host_only_routes();
            reject_route_with_noexport_community({{ item.neighbor.asn }});

            reject_bogon_route();
            reject_too_long_aspath();
            reject_out_of_bound_route();

            remove_private_asn(TYPE_INET);
            handle_prepend({{ item.neighbor.asn }});
            accept_own_routes();
            accept_downstream_routes();
            reject;
        };
    };
}
